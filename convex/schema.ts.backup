import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";
import { authTables } from "@convex-dev/auth/server";

const applicationTables = {
  contacts: defineTable({
    userId: v.id("users"),
    name: v.string(),
    phoneNumber: v.string(),
    email: v.optional(v.string()),
    notes: v.optional(v.string()),
  }).index("by_user", ["userId"]),

  groups: defineTable({
    userId: v.id("users"),
    name: v.string(),
    description: v.optional(v.string()),
    color: v.optional(v.string()),
  }).index("by_user", ["userId"]),

  groupMemberships: defineTable({
    userId: v.id("users"),
    groupId: v.id("groups"),
    contactId: v.id("contacts"),
  })
    .index("by_user", ["userId"])
    .index("by_group", ["groupId"])
    .index("by_contact", ["contactId"])
    .index("by_group_and_contact", ["groupId", "contactId"]),

  messageTemplates: defineTable({
    userId: v.id("users"),
    name: v.string(),
    content: v.string(),
    category: v.optional(v.string()),
  }).index("by_user", ["userId"]),

  scheduledMessages: defineTable({
    userId: v.id("users"),
    contactId: v.id("contacts"),
    groupId: v.optional(v.id("groups")),
    templateId: v.optional(v.id("messageTemplates")),
    message: v.string(),
    scheduledFor: v.number(), // timestamp
    status: v.union(v.literal("pending"), v.literal("sent"), v.literal("failed")),
    sentAt: v.optional(v.number()),
    notes: v.optional(v.string()),
    category: v.optional(v.string()),
  })
    .index("by_user", ["userId"])
    .index("by_status", ["status"])
    .index("by_scheduled_time", ["scheduledFor"])
    .index("by_category", ["category"])
    .index("by_group", ["groupId"]),

  apiKeys: defineTable({
    userId: v.id("users"),
    keyHash: v.string(),
    name: v.string(),
    lastUsed: v.optional(v.number()),
    isActive: v.boolean(),
  }).index("by_user", ["userId"])
    .index("by_key_hash", ["keyHash"]),
};

export default defineSchema({
  ...authTables,
  ...applicationTables,
});
